{
  "id": "msg-1757186955-DwWcnAim3LFVA7CeF6Q4",
  "type": "assistant",
  "parentMessageId": "msg-1757186955-PMAVWz5g5hxhpBjlD2bK",
  "context": "main-chat",
  "contentType": "text",
  "characterId": "char-1757186004-zxYFftGLTBbgAfqROPOk",
  "citations": [],
  "images": [],
  "files": [],
  "createdAt": "2025-09-06T19:29:15.583Z",
  "updatedAt": "2025-09-06T19:35:29.586Z",
  "isGenerating": false,
  "isRetrying": false,
  "isEdited": false,
  "isCollapsed": true,
  "metadata": {
    "plugins": [],
    "generateDuration": 19374,
    "latencyDuration": 800,
    "tokensCount": 253,
    "tokensPerSecond": 13.058738515536287,
    "variantSlug": "openrouter/sonoma-sky-alpha",
    "provider": "Stealth",
    "cost": "0"
  },
  "content": "```typescript\n/**\n * Base class for application errors.\n */\nabstract class BaseAppError {\n  constructor(public readonly code: string) {}\n}\n\ntype AppErrorType = BaseAppError;\n\ninterface AppErrorConstructor {\n  new(): AppErrorType;\n  readonly code: string;\n}\n\n/**\n * Factory function to create an AppError subclass with a fixed code.\n * @param code - The error code for the subclass.\n * @returns The constructor for the error class.\n */\nfunction AppError(code: string): AppErrorConstructor {\n  return class extends BaseAppError {\n    static readonly code = code;\n    constructor() {\n      super(code);\n    }\n  };\n}\n\n// Example error class\nclass AuthTokenError extends AppError(\"AUTH_TOKEN\") {}\n\n/**\n * Type guard to match an error object against an AppError class by code.\n * @param error - The error object to check.\n * @param ErrorClass - The AppError class to match against.\n * @returns True if the error code matches the class code.\n */\nfunction matchErrorClass<E extends AppErrorConstructor>(\n  error: { code?: unknown },\n  ErrorClass: E\n): error is { code: E[\"code\"] } {\n  return error.code === ErrorClass.code;\n}\n```"
}
